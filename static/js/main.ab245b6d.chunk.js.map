{"version":3,"sources":["redux/actions.js","redux/reducers.js","redux/store.js","util/fetchItem.js","components/Menu.js","components/CardSubtextItem.js","components/Story.js","components/Spinner.js","components/Comment.js","components/Comments.js","components/App.js","serviceWorker.js","index.js"],"names":["UPDATE_ID_CACHE","UPDATE_SECTION","UPDATE_VISIBLE_STORIES","UPDATE_CURRENT_PAGE","UPDATE_COMMENTS_OPEN","UPDATE_COMMENTS","UPDATE_COMMENTS_PARENT","updateIdCache","ids","type","updateVisibleStories","stories","updateCurrentPage","page","updateCommentsOpen","open","rootReducer","combineReducers","idCache","state","action","section","visibleStories","currentPage","commentsOpen","comments","commentsParent","parent","url","pageSize","localStorageViewedKey","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","id","a","fetch","response","json","result","fetchItem","actionCreators","updateSection","styles","menu","margin","padding","position","top","zIndex","display","flexWrap","justifyContent","alignItems","button","paddingTop","paddingBottom","connect","useEffect","results","fetchIds","Paper","style","elevation","align","map","name","Button","disabled","key","onClick","e","event","stopPropagation","clickedSection","currentTarget","handleMenuClick","cardSubtextStyle","marginLeft","CardSubtextItem","text","Typography","variant","updateComments","updateCommentsParent","data","timeout","useState","expanded","setExpanded","viewed","setViewed","JSON","parse","localStorage","getItem","i","length","handleClick","alreadyViewed","push","time","moment","unix","setItem","stringify","addToViewed","Slide","direction","in","title","mountOnEnter","unmountOnExit","transitionDelay","Card","cursor","CardContent","h2p","split","replace","substring","CardActions","Container","fromNow","score","kids","openComments","fontWeight","size","Spinner","CircularProgress","Comment","depth","childComments","setChildComments","fetchingKids","setFetchingKids","fetchKids","kid","filter","item","dead","deleted","raised","p","gutterBottom","by","visibleComments","setVisibleComments","commentsPage","setCommentsPage","fetching","setFetching","commentsPageSize","scrollRef","useBottomScrollListener","items","slice","concat","fetchComments","handleCloseClick","Modal","onClose","overflowY","ref","maxWidth","outline","marginTop","Fab","color","bottom","right","Storage","isAfter","subtract","story","storyIds","includes","fetchPage","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ab245b6d.chunk.js","sourcesContent":["export const UPDATE_ID_CACHE = 'UPDATE_ID_CACHE';\nexport const UPDATE_SECTION = 'UPDATE_SECTION';\nexport const UPDATE_VISIBLE_STORIES = 'UPDATE_VISIBLE_STORIES';\nexport const UPDATE_CURRENT_PAGE = 'UPDATE_CURRENT_PAGE';\nexport const UPDATE_COMMENTS_OPEN = 'UPDATE_COMMENTS_OPEN';\nexport const UPDATE_COMMENTS = 'UPDATE_COMMENTS';\nexport const UPDATE_COMMENTS_PARENT = 'UPDATE_COMMENTS_PARENT';\n\nexport function updateIdCache(ids) {\n  return {\n    type: UPDATE_ID_CACHE,\n    ids: ids,\n  }\n}\n\nexport function updateSection(section) {\n  return {\n    type: UPDATE_SECTION,\n    section: section,\n  }\n}\n\nexport function updateVisibleStories(stories) {\n  return {\n    type: UPDATE_VISIBLE_STORIES,\n    stories: stories,\n  }\n}\n\nexport function updateCurrentPage(page) {\n  return {\n    type: UPDATE_CURRENT_PAGE,\n    page: page,\n  }\n}\n\nexport function updateCommentsOpen(open) {\n  return {\n    type: UPDATE_COMMENTS_OPEN,\n    open: open,\n  }\n}\n\nexport function updateComments(comments) {\n  return {\n    type: UPDATE_COMMENTS,\n    comments: comments,\n  }\n}\n\nexport function updateCommentsParent(parent) {\n  return {\n    type: UPDATE_COMMENTS_PARENT,\n    parent: parent,\n  }\n}\n","import { combineReducers } from 'redux';\nimport {\n  UPDATE_ID_CACHE,\n  UPDATE_SECTION,\n  UPDATE_VISIBLE_STORIES,\n  UPDATE_CURRENT_PAGE,\n  UPDATE_COMMENTS_OPEN,\n  UPDATE_COMMENTS,\n  UPDATE_COMMENTS_PARENT,\n} from './actions';\n\nfunction idCache(state = [], action) {\n  switch(action.type) {\n    case UPDATE_ID_CACHE:\n      return action.ids;\n    default:\n      return state;\n  }\n}\n\nfunction section(state = 'top', action) {\n  switch(action.type) {\n    case UPDATE_SECTION:\n      return action.section;\n    default:\n      return state;\n  }\n}\n\nfunction visibleStories(state = [], action) {\n  switch(action.type) {\n    case UPDATE_VISIBLE_STORIES:\n      return action.stories;\n    default:\n      return state;\n  }\n}\n\nfunction currentPage(state = 1, action) {\n  switch(action.type) {\n    case UPDATE_CURRENT_PAGE:\n      return action.page;\n    default:\n      return state;\n  }\n}\n\nfunction commentsOpen(state = false, action) {\n  switch(action.type) {\n    case UPDATE_COMMENTS_OPEN:\n      return action.open;\n    default:\n      return state;\n  }\n}\n\nfunction comments(state = [], action) {\n  switch(action.type) {\n    case UPDATE_COMMENTS:\n      return action.comments;\n    default:\n      return state;\n  }\n}\n\nfunction commentsParent(state = null, action) {\n  switch(action.type) {\n    case UPDATE_COMMENTS_PARENT:\n      return action.parent;\n    default:\n      return state;\n  }\n}\n\nconst rootReducer = combineReducers({\n  idCache,\n  section,\n  visibleStories,\n  currentPage,\n  commentsOpen,\n  comments,\n  commentsParent,\n});\n\nexport default rootReducer;\n","import { createStore } from 'redux';\nimport rootReducer from './reducers';\n\nexport const url = 'https://hacker-news.firebaseio.com/v0';\nexport const pageSize = 10;\nexport const localStorageViewedKey = 'hnViewed';\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default store;\n","import { url } from '../redux/store';\n\nasync function fetchItem(id) {\n  const response = await fetch(`${url}/item/${id}.json`);\n  const result = await response.json();\n  return result;\n}\n\nexport default fetchItem;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport {\n  updateSection,\n  updateIdCache,\n  updateCurrentPage,\n  updateVisibleStories,\n} from '../redux/actions';\n\nimport { url } from '../redux/store';\n\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\n\nconst mapState = state => ({\n  section: state.section,\n  idCache: state.idCache,\n});\n\nconst actionCreators = {\n  updateSection,\n  updateIdCache,\n  updateCurrentPage,\n  updateVisibleStories,\n};\n\nconst styles = {\n  menu: {\n    margin: '2em auto',\n    padding: '0.5em',\n    position: 'sticky',\n    top: '0.5em',\n    zIndex: 1,\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-evenly',\n    alignItems: 'center',\n  },\n  button: {\n    paddingTop: '0.75em',\n    paddingBottom: '0.75em',\n  },\n};\n\nfunction Menu({\n  section,\n  updateSection,\n  idCache,\n  updateIdCache,\n  updateCurrentPage,\n  updateVisibleStories,\n}) {\n  const sections = ['top', 'new', 'best', 'ask', 'show', 'job'];\n\n  function handleMenuClick(event) {\n    event.stopPropagation();\n    let clickedSection = event.currentTarget.id;\n    if (clickedSection !== section) {\n      updateVisibleStories([]);\n      updateIdCache([]);\n      updateSection(clickedSection);\n      updateCurrentPage(1);\n    }\n  }\n\n  useEffect(() => {\n    async function fetchIds() {\n      const response = await fetch(url + `/${section}stories.json`);\n      const results = await response.json();\n      updateIdCache(results);\n    }\n    fetchIds();\n  }, [section, updateIdCache])\n\n  return (\n    <Paper style={styles.menu} elevation={4} align='center' id='menu'>\n      {sections.map(name => (\n        <Button\n          disabled={section === name}\n          id={name}\n          key={name}\n          onClick={e => handleMenuClick(e)}\n          style={styles.button}\n        >\n          {name === 'job' ? 'jobs' : name}\n        </Button>\n      ))}\n    </Paper>\n  )\n}\n\nexport default connect(mapState, actionCreators)(Menu);\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nexport const cardSubtextStyle = {\n  marginLeft: '20px',\n  padding: '5px',\n};\n\nexport default function CardSubtextItem({ text, styles }) {\n  return (\n    <Typography\n      variant='overline'\n      style={{...cardSubtextStyle, ...styles}}\n    >\n      {text}\n    </Typography>\n  )\n}\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { localStorageViewedKey } from '../redux/store';\n\nimport {\n  updateCommentsOpen,\n  updateComments,\n  updateCommentsParent,\n} from '../redux/actions';\n\nimport moment from 'moment';\nimport h2p from 'html2plaintext';\n\nimport CardSubtextItem, { cardSubtextStyle } from './CardSubtextItem';\n\nimport Slide from '@material-ui/core/Slide';\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst mapState = state => ({\n  commentsOpen: state.commentsOpen,\n});\n\nconst actionCreators = {\n  updateCommentsOpen,\n  updateComments,\n  updateCommentsParent,\n};\n\nfunction Story({\n  data,\n  timeout,\n  commentsOpen,\n  updateCommentsOpen,\n  updateComments,\n  updateCommentsParent,\n}) {\n  const [expanded, setExpanded] = useState(false);\n  const [viewed, setViewed] = useState(false);\n\n  // Check if previously viewed\n  useEffect(() => {\n    const viewed = JSON.parse(localStorage.getItem(localStorageViewedKey));\n    for (let i = 0; i < viewed.length; i++) {\n      if (viewed[i].id === data.id) setViewed(true);\n    }\n  }, [data.id]);\n\n  const addToViewed = () => {\n    setViewed(true);\n    let viewed = JSON.parse(localStorage.getItem(localStorageViewedKey));\n    let alreadyViewed = false;\n    for (let i = 0; i < viewed.length; i++) {\n      if (viewed[i].id === data.id) alreadyViewed = true;\n    }\n    if (!alreadyViewed) {\n      viewed.push({\n        id: data.id,\n        time: moment().unix(),\n      });\n      localStorage.setItem(localStorageViewedKey, JSON.stringify(viewed));\n    }\n  }\n\n  const handleClick = (e) => {\n    e.stopPropagation();\n\n    addToViewed();\n\n    if (data.url) window.open(data.url);\n    if (data.text) setExpanded(expanded => !expanded);\n  }\n\n  const openComments = (e) => {\n    e.stopPropagation();\n    //window.open(`https://news.ycombinator.com/item?id=${data.id}`);\n    updateCommentsOpen(true);\n    updateCommentsParent(data);\n    updateComments(data.kids);\n  }\n\n  return (\n    <Slide\n      direction='right'\n      in={data.title !== ''}\n      mountOnEnter\n      unmountOnExit\n      key={data.id}\n      style={{ transitionDelay: `${timeout}ms` }}\n    >\n      <Card\n        onClick={e => handleClick(e)}\n        style={{\n          margin: '2em auto',\n          cursor: 'pointer',\n        }}\n      >\n        <CardContent>\n          <Typography variant='h6'>\n            {h2p(data.title)}\n          </Typography>\n          <Typography variant='caption'>\n            {data.url && data.url.split('/')[2].replace(/^www\\./, '')}\n          </Typography>\n          <Typography>\n            {expanded && h2p(data.text)}\n            {!expanded && data.text &&\n              h2p(data.text.substring(0, 70) + '...')\n            }\n          </Typography>\n        </CardContent>\n\n        <CardActions>\n          <Container align='right'>\n            <CardSubtextItem\n              text={moment.unix(data.time).fromNow()}\n            />\n            {viewed &&\n              <CardSubtextItem\n                text={data.score + ' points'}\n              />\n            }\n            {viewed &&\n              <Button\n                onClick={e => openComments(e)}\n                style={{ fontWeight: 400, ...cardSubtextStyle }}\n                size='small'\n              >\n                {(data.kids && data.kids.length + ' replies') || '0 replies'}\n              </Button>\n            }\n          </Container>\n        </CardActions>\n      </Card>\n    </Slide>\n  )\n}\n\nexport default connect(mapState, actionCreators)(Story);\n","import React from 'react';\n\nimport Container from '@material-ui/core/Container';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nfunction Spinner() {\n  return (\n    <Container align='center'>\n      <CircularProgress style={{ margin: '2em' }} />\n    </Container>\n  )\n}\n\nexport default Spinner;\n","import React, { useState } from 'react';\n\nimport fetchItem from '../util/fetchItem';\n\nimport moment from 'moment';\nimport h2p from 'html2plaintext';\n\nimport CardSubtextItem, { cardSubtextStyle } from './CardSubtextItem';\nimport Spinner from './Spinner';\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Slide from '@material-ui/core/Slide';\n\nfunction Comment({ data, depth }) {\n\n  const [childComments, setChildComments] = useState([]);\n  const [fetchingKids, setFetchingKids] = useState(false);\n\n  const fetchKids = async () => {\n    setFetchingKids(true);\n    let kids = [];\n    for (let i = 0; i < data.kids.length; i++) {\n      const kid = await fetchItem(data.kids[i]);\n      kids.push(kid);\n    }\n    kids = kids.filter(item => {\n      if (item === null) return false;\n      if (item.dead || item.deleted) return false;\n      return true;\n    })\n    setChildComments(kids);\n    setFetchingKids(false);\n  };\n\n  return (\n    <span>\n      <Slide\n        direction='up'\n        in={data.id >= 0}\n        mountOnEnter\n        unmountOnExit\n      >\n        <Card\n          raised\n          style={{\n            margin: '1em',\n            padding: '5px',\n            marginLeft: `calc(1em + ${depth}em)`\n          }}\n        >\n          <CardContent>\n            {data.text && data.text.split('<p>').map((p, i) => (\n              <Typography gutterBottom key={p+i}>\n                {h2p(p)}\n              </Typography>\n            ))}\n          </CardContent>\n\n          <CardActions>\n            <Container align='right'>\n              <CardSubtextItem\n                text={<span>&mdash; {data.by}</span>}\n              />\n              <CardSubtextItem\n                text={moment.unix(data.time).fromNow()}\n              />\n              <Button\n                size='small'\n                style={{ fontWeight: 400, ...cardSubtextStyle }}\n                onClick={fetchKids}\n                disabled={!data.kids || (data.kids && data.kids.length === 0)}\n              >\n                {(data.kids && data.kids.length + ' replies') || '0 replies'}\n              </Button>\n            </Container>\n          </CardActions>\n        </Card>\n      </Slide>\n\n      {fetchingKids &&\n        <Spinner />\n      }\n      {childComments.map((item, i) => (\n        <Comment\n          data={item}\n          key={item.by + item.id}\n          timeout={i * 30}\n          depth={depth + 1}\n        />\n      ))}\n    </span>\n  )\n}\n\nexport default Comment;\n","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux';\nimport { updateCommentsOpen } from '../redux/actions';\nimport fetchItem from '../util/fetchItem';\n\nimport { useBottomScrollListener } from 'react-bottom-scroll-listener';\nimport h2p from 'html2plaintext';\nimport moment from 'moment';\n\nimport Comment from './Comment';\nimport CardSubtextItem from './CardSubtextItem';\nimport Spinner from './Spinner';\n\nimport Modal from '@material-ui/core/Modal';\nimport Container from '@material-ui/core/Container';\nimport Fab from '@material-ui/core/Fab';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Typography from '@material-ui/core/Typography';\nimport Slide from '@material-ui/core/Slide';\n\nconst mapState = state => ({\n  commentsOpen: state.commentsOpen,\n  comments: state.comments,\n  commentsParent: state.commentsParent,\n});\n\nconst actionCreators = {\n  updateCommentsOpen,\n};\n\nfunction Comments({\n  commentsOpen,\n  comments,\n  commentsParent,\n  updateCommentsOpen,\n}) {\n  const [visibleComments, setVisibleComments] = useState([]);\n  const [commentsPage, setCommentsPage] = useState(1);\n  const [fetching, setFetching] = useState(false);\n  const commentsPageSize = 10;\n\n  const scrollRef = useBottomScrollListener(() => {\n    if (commentsOpen &&\n        visibleComments.length <= commentsPage * commentsPageSize) {\n      setCommentsPage(commentsPage => ++commentsPage);\n    }\n  });\n\n  useEffect(() => {\n    async function fetchComments() {\n      if (!commentsOpen) {\n        setFetching(false);\n        return;\n      }\n      if (visibleComments.length < commentsPage * commentsPageSize) {\n        let items = [];\n        const ids = comments.slice(\n          (commentsPage * commentsPageSize) - commentsPageSize,\n          commentsPage * commentsPageSize\n        );\n        for (let i = 0; i < ids.length; i++) {\n          const item = await fetchItem(ids[i]);\n          items.push(item);\n        }\n        // Filter duplicate and null items\n        items = items.filter(item => {\n          if (item === null) return false;\n          if (item.dead || item.deleted) return false;\n          for (let i = 0; i < visibleComments.length; i++) {\n            if (item.id === visibleComments[i].id)\n              return false;\n          }\n          return true;\n        });\n        if (items.length > 0) {\n          setVisibleComments(visibleComments.concat(items));\n        }\n      }\n      setFetching(false);\n    }\n    setFetching(true);\n    fetchComments();\n  }, [comments, commentsPage, commentsOpen, visibleComments]);\n\n  const handleCloseClick = () => {\n    updateCommentsOpen(false);\n    setVisibleComments([]);\n    setCommentsPage(1);\n  };\n\n  if (commentsParent === null) return null;\n  return (\n    <Modal\n      open={commentsOpen}\n      onClose={handleCloseClick}\n      style={{ overflowY: 'scroll' }}\n      ref={scrollRef}\n    >\n      <Container\n        maxWidth='md'\n        style={{\n          outline: 0,\n          marginTop: '1em',\n          padding: '5px',\n        }}\n      >\n        <Slide\n          direction='up'\n          mountOnEnter\n          unmountOnExit\n          in={commentsOpen}\n        >\n          <Card raised>\n            <CardContent style={{ padding: '1em' }}>\n              <Typography variant='h5'>\n                {commentsParent.title}\n              </Typography>\n              {commentsParent.url &&\n                <Typography variant='caption'>\n                  {commentsParent.url.split('/')[2].replace(/^www\\./, '')}\n                </Typography>\n              }\n              {commentsParent.text &&\n                commentsParent.text.split('<p>').map(p => (\n                  <Typography key={p}>\n                    {h2p(p)}\n                  </Typography>\n                ))\n              }\n            </CardContent>\n\n            <CardActions>\n              <Container align='right'>\n                <CardSubtextItem\n                  text={<span>&mdash; {commentsParent.by}</span>}\n                />\n                <CardSubtextItem\n                  text={moment.unix(commentsParent.time).fromNow()}\n                />\n              </Container>\n            </CardActions>\n          </Card>\n        </Slide>\n\n        <Fab\n          onClick={handleCloseClick}\n          color='primary'\n          style={{\n            position: 'fixed',\n            bottom: '2em',\n            right: '2em',\n            zIndex: 1,\n          }}\n        >\n          <CloseIcon />\n        </Fab>\n\n        {visibleComments.map((item, i) => (\n          <Comment\n            data={item}\n            key={item.id}\n            timeout={0}\n            depth={0}\n          />\n        ))}\n\n        {fetching && <Spinner />}\n      </Container>\n    </Modal>\n  )\n}\n\nexport default connect(mapState, actionCreators)(Comments);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  updateIdCache,\n  updateVisibleStories,\n  updateCurrentPage,\n} from '../redux/actions';\n\nimport moment from 'moment';\n\nimport { localStorageViewedKey } from '../redux/store';\nimport { pageSize } from '../redux/store';\n\nimport fetchItem from '../util/fetchItem';\n\nimport { useBottomScrollListener } from 'react-bottom-scroll-listener';\n\nimport Menu from './Menu';\nimport Story from './Story';\nimport Comments from './Comments';\nimport Spinner from './Spinner';\n\nimport Container from '@material-ui/core/Container';\n\nconst mapState = state => ({\n  visibleStories: state.visibleStories,\n  idCache: state.idCache,\n  page: state.currentPage,\n});\n\nconst actionCreators = {\n  updateIdCache,\n  updateVisibleStories,\n  updateCurrentPage,\n};\n\nfunction App({\n  visibleStories,\n  updateVisibleStories,\n  idCache,\n  updateIdCache,\n  page,\n  updateCurrentPage,\n}) {\n\n  useBottomScrollListener(() => {\n    if (visibleStories.length === page * pageSize) {\n      updateCurrentPage(page + 1);\n    }\n  }, 500, 200)\n\n  useEffect(() => {\n    // Init storage\n    if (Storage && localStorage.getItem(localStorageViewedKey) === null) {\n      localStorage.setItem(localStorageViewedKey, JSON.stringify([]));\n    }\n\n    // Remove old items\n    const data = localStorage.getItem(localStorageViewedKey);\n    if (data) {\n      let viewed = JSON.parse(data);\n      viewed = viewed.filter(item => (\n        moment.unix(item.time).isAfter(moment().subtract(5, 'days'))\n      ));\n      localStorage.setItem(localStorageViewedKey, JSON.stringify(viewed));\n    }\n  }, []);\n\n  useEffect(() => {\n    async function fetchPage() {\n      if (idCache.length > 0 &&\n        visibleStories.length < page * pageSize &&\n        visibleStories.length < idCache.length\n      ) {\n        let stories = [];\n        const ids = idCache.slice(\n          (page * pageSize) - pageSize,\n          page * pageSize\n        );\n        for (let i = 0; i < ids.length; i++) {\n          const story = await fetchItem(ids[i]);\n          stories.push(story);\n        }\n\n        // filter duplicates\n        let storyIds = [];\n        stories = stories.filter(story => {\n          if (storyIds.includes(story.id)) {\n            return false;\n          } else {\n            storyIds.push(story.id);\n            return true;\n          }\n        });\n\n        updateVisibleStories(visibleStories.concat(stories));\n      }\n    }\n    fetchPage();\n  }, [\n    page,\n    idCache,\n    visibleStories,\n    updateVisibleStories,\n  ]);\n\n  return (\n    <Container maxWidth='md'>\n      <Menu />\n\n      {visibleStories.map((item, i) => (\n        <Story data={item} key={item.title} timeout={i * 30} />\n      ))}\n\n      { visibleStories.length < idCache.length && (\n        <Spinner />\n      )}\n\n      <Comments />\n    </Container>\n  );\n}\n\nexport default connect(mapState, actionCreators)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister(); // .register();\n"],"sourceRoot":""}