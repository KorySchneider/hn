{"version":3,"sources":["redux/actions.js","redux/reducers.js","redux/store.js","components/Menu.js","components/Story.js","components/App.js","serviceWorker.js","index.js"],"names":["UPDATE_ID_CACHE","UPDATE_SECTION","UPDATE_VISIBLE_STORIES","UPDATE_CURRENT_PAGE","updateIdCache","ids","type","updateVisibleStories","stories","updateCurrentPage","page","rootReducer","combineReducers","idCache","state","action","section","visibleStories","currentPage","url","pageSize","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","actionCreators","updateSection","style","margin","padding","connect","handleMenuClick","event","stopPropagation","clickedSection","currentTarget","id","useEffect","a","fetch","response","json","results","fetchIds","Paper","elevation","align","Button","disabled","onClick","e","subtextStyle","marginRight","Story","data","timeout","useState","expanded","setExpanded","Slide","direction","in","title","mountOnEnter","unmountOnExit","key","transitionDelay","Card","open","text","handleClick","cursor","CardContent","Typography","variant","h2p","substring","score","moment","unix","time","fromNow","openComments","kids","length","fetchItem","result","useBottomScrollListener","slice","i","story","push","concat","fetchPage","Container","maxWidth","map","item","CircularProgress","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a926c105.chunk.js","sourcesContent":["export const UPDATE_ID_CACHE = 'UPDATE_ID_CACHE';\nexport const UPDATE_SECTION = 'UPDATE_SECTION';\nexport const UPDATE_VISIBLE_STORIES = 'UPDATE_VISIBLE_STORIES';\nexport const UPDATE_CURRENT_PAGE = 'UPDATE_CURRENT_PAGE';\n\nexport function updateIdCache(ids) {\n  return {\n    type: UPDATE_ID_CACHE,\n    ids: ids,\n  }\n}\n\nexport function updateSection(section) {\n  return {\n    type: UPDATE_SECTION,\n    section: section,\n  }\n}\n\nexport function updateVisibleStories(stories) {\n  return {\n    type: UPDATE_VISIBLE_STORIES,\n    stories: stories,\n  }\n}\n\nexport function updateCurrentPage(page) {\n  return {\n    type: UPDATE_CURRENT_PAGE,\n    page: page,\n  }\n}\n","import { combineReducers } from 'redux';\nimport {\n  UPDATE_ID_CACHE,\n  UPDATE_SECTION,\n  UPDATE_VISIBLE_STORIES,\n  UPDATE_CURRENT_PAGE,\n} from './actions';\n\nfunction idCache(state = [], action) {\n  switch(action.type) {\n    case UPDATE_ID_CACHE:\n      return action.ids;\n    default:\n      return state;\n  }\n}\n\nfunction section(state = 'top', action) {\n  switch(action.type) {\n    case UPDATE_SECTION:\n      return action.section;\n    default:\n      return state;\n  }\n}\n\nfunction visibleStories(state = [], action) {\n  switch(action.type) {\n    case UPDATE_VISIBLE_STORIES:\n      return action.stories;\n    default:\n      return state;\n  }\n}\n\nfunction currentPage(state = 1, action) {\n  switch(action.type) {\n    case UPDATE_CURRENT_PAGE:\n      return action.page;\n    default:\n      return state;\n  }\n}\n\nconst rootReducer = combineReducers({\n  idCache,\n  section,\n  visibleStories,\n  currentPage,\n});\n\nexport default rootReducer;\n","import { createStore } from 'redux';\nimport rootReducer from './reducers';\n\nexport const url = 'https://hacker-news.firebaseio.com/v0';\nexport const pageSize = 10;\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default store;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport {\n  updateSection,\n  updateIdCache,\n  updateCurrentPage,\n  updateVisibleStories,\n} from '../redux/actions';\n\nimport { url } from '../redux/store';\n\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\n\nconst mapState = state => ({\n  section: state.section,\n  idCache: state.idCache,\n});\n\nconst actionCreators = {\n  updateSection,\n  updateIdCache,\n  updateCurrentPage,\n  updateVisibleStories,\n};\n\nconst style = {\n  margin: '2em auto',\n  padding: '0.5em',\n};\n\nfunction Menu({\n  section,\n  updateSection,\n  idCache,\n  updateIdCache,\n  updateCurrentPage,\n  updateVisibleStories,\n}) {\n\n  function handleMenuClick(event) {\n    event.stopPropagation();\n    let clickedSection = event.currentTarget.id;\n    if (clickedSection !== section) {\n      updateVisibleStories([]);\n      updateSection(clickedSection);\n      updateCurrentPage(1);\n    }\n  }\n\n  useEffect(() => {\n    async function fetchIds() {\n      const response = await fetch(url + `/${section}stories.json`);\n      const results = await response.json();\n      updateIdCache(results);\n    }\n    fetchIds();\n  }, [section, updateIdCache])\n\n  return (\n    <Paper style={style} elevation={2} align='center'>\n      <Button\n        disabled={section === 'top'}\n        id='top'\n        onClick={e => handleMenuClick(e)}\n      >\n        Top\n      </Button>\n\n      <Button\n        disabled={section === 'new'}\n        id='new'\n        onClick={e => handleMenuClick(e)}\n      >\n        New\n      </Button>\n\n      <Button\n        disabled={section === 'best'}\n        id='best'\n        onClick={e => handleMenuClick(e)}\n      >\n        Best\n      </Button>\n\n      <Button\n        disabled={section === 'ask'}\n        id='ask'\n        onClick={e => handleMenuClick(e)}\n      >\n        Ask\n      </Button>\n\n      <Button\n        disabled={section === 'show'}\n        id='show'\n        onClick={e => handleMenuClick(e)}\n      >\n        Show\n      </Button>\n\n      <Button\n        disabled={section === 'job'}\n        id='job'\n        onClick={e => handleMenuClick(e)}\n      >\n        Jobs\n      </Button>\n    </Paper>\n  )\n}\n\nexport default connect(mapState, actionCreators)(Menu);\n","import React, { useState } from 'react';\n\nimport moment from 'moment';\nimport h2p from 'html2plaintext';\n\nimport Slide from '@material-ui/core/Slide';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nconst subtextStyle = {\n  marginRight: '20px',\n};\n\nfunction Story({ data, timeout }) {\n  const [expanded, setExpanded] = useState(false);\n\n  const handleClick = (e) => {\n    e.stopPropagation();\n    if (data.url) window.open(data.url);\n    if (data.text) setExpanded(expanded => !expanded);\n  }\n\n  const openComments = (e) => {\n    e.stopPropagation();\n    window.open(`https://news.ycombinator.com/item?id=${data.id}`);\n  }\n\n  return (\n    <Slide\n      direction='up'\n      in={data.title !== ''}\n      mountOnEnter\n      unmountOnExit\n      key={data.id}\n      style={{ transitionDelay: `${timeout}ms` }}\n    >\n      <Card\n        onClick={e => handleClick(e)}\n        style={{\n          margin: '2em auto',\n          cursor: 'pointer',\n        }}\n      >\n        <CardContent>\n          <Typography variant='h6'>\n            {h2p(data.title)}\n          </Typography>\n          <Typography>\n            {expanded && h2p(data.text)}\n            {!expanded && data.text &&\n              h2p(data.text.substring(0, 70) + '...')\n            }\n          </Typography>\n          <Typography variant='overline' style={subtextStyle}>\n            {data.score + ' points'}\n          </Typography>\n          <Typography variant='overline' style={subtextStyle}>\n            {moment.unix(data.time).fromNow()}\n          </Typography>\n          <Typography onClick={e => openComments(e)} variant='overline' style={subtextStyle}>\n            {(data.kids && data.kids.length + ' replies') || '0 replies'}\n          </Typography>\n        </CardContent>\n      </Card>\n    </Slide>\n  )\n}\n\nexport default Story;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  updateIdCache,\n  updateVisibleStories,\n  updateCurrentPage,\n} from '../redux/actions';\n\nimport { url, pageSize } from '../redux/store';\n\nimport { useBottomScrollListener } from 'react-bottom-scroll-listener';\n\nimport Menu from './Menu';\nimport Story from './Story';\n\nimport Container from '@material-ui/core/Container';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst mapState = state => ({\n  visibleStories: state.visibleStories,\n  idCache: state.idCache,\n  page: state.currentPage,\n});\n\nconst actionCreators = {\n  updateIdCache,\n  updateVisibleStories,\n  updateCurrentPage,\n}\n\nfunction App({\n  visibleStories,\n  updateVisibleStories,\n  idCache,\n  updateIdCache,\n  page,\n  updateCurrentPage,\n}) {\n\n  useBottomScrollListener(() => {\n    if (visibleStories.length === page * pageSize) {\n      updateCurrentPage(++page);\n    }\n  }, 500, 200)\n\n  async function fetchItem(id) {\n    const response = await fetch(`${url}/item/${id}.json`);\n    const result = await response.json();\n    return result;\n  }\n\n  useEffect(() => {\n    async function fetchPage() {\n      if (idCache.length > 0) {\n        let stories = [];\n        const ids = idCache.slice(\n          (page * pageSize) - pageSize,\n          page * pageSize\n        );\n        for (let i = 0; i < ids.length; i++) {\n          const story = await fetchItem(ids[i]);\n          stories.push(story);\n        }\n        updateVisibleStories(visibleStories.concat(stories));\n      }\n    }\n    fetchPage();\n  }, [\n    page,\n    idCache,\n    updateVisibleStories,\n  ])\n\n  return (\n    <Container maxWidth='md'>\n      {/* Menu */}\n      <Menu />\n\n      {/* Stories */}\n      {visibleStories.map((item, i) => (\n        <Story data={item} key={item.title} timeout={i * 50} />\n      ))}\n\n      <Container align='center'>\n        <CircularProgress style={{ margin: '2em' }} />\n      </Container>\n    </Container>\n  );\n}\n\nexport default connect(mapState, actionCreators)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}